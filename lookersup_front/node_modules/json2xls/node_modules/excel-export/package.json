{
  "name": "excel-export",
  "version": "0.3.11",
  "description": "Simple data set export to Excel xlsx file",
  "main": "index.js",
  "scripts": {
    "test": "mocha test/main"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/functionscope/Node-Excel-Export"
  },
  "keywords": [
    "Excel",
    "xlsx"
  ],
  "author": {
    "name": "Ber-Lin Lai",
    "email": "berlin.lai@gmail.com"
  },
  "license": "BSD",
  "dependencies": {
    "node-zip": "1.x"
  },
  "devDependencies": {
    "mocha": "",
    "should": ""
  },
  "readme": "# excel-export #\r\n\r\nA simple node.js module for exporting data set to Excel xlsx file.\r\n\r\n## Using excel-export ##\r\nSetup configuration object before passing it into the execute method.  **cols** is an array for column definition.  Column definition should have caption and type properties while width property is not required.  The unit for width property is character.   **beforeCellWrite** callback is optional.  beforeCellWrite is invoked with row, cell data and option object (eOpt detail later) parameters.  The return value from beforeCellWrite is what get written into the cell.  Supported valid types are string, date, bool and number.  **rows** is the data to be exported. It is an Array of Array (row). Each row should be the same length as cols.  Styling is optional.  However, if you want to style your spreadsheet, a valid excel styles xml file is needed.  An easy way to get a styles xml file is to unzip an existing xlsx file which has the desired styles and copy out the styles.xml file. Use **stylesXmlFile** property of configuartion object to specify the relative path and file name of the xml file.  Google for \"spreadsheetml style\" to learn more detail on styling spreadsheet.  eOpt in beforeCellWrite callback contains rowNum for current row number. eOpt.styleIndex should be a valid zero based index from cellXfs tag of the selected styles xml file.  eOpt.cellType is default to the type value specified in column definition.  However, in some scenario you might want to change it for different format. \r\n\r\n\r\n\r\n    var express = require('express');\r\n\tvar nodeExcel = require('excel-export');\r\n\tvar app = express();\r\n\r\n\tapp.get('/Excel', function(req, res){\r\n\t  \tvar conf ={};\r\n\t\tconf.stylesXmlFile = \"styles.xml\";\r\n\t  \tconf.cols = [{\r\n\t\t\tcaption:'string',\r\n            type:'string',\r\n            beforeCellWrite:function(row, cellData){\r\n\t\t\t\t return cellData.toUpperCase();\r\n\t\t\t},\r\n            width:28.7109375\r\n\t\t},{\r\n\t\t\tcaption:'date',\r\n\t\t\ttype:'date',\r\n\t\t\tbeforeCellWrite:function(){\r\n\t\t\t\tvar originDate = new Date(Date.UTC(1899,11,30));\r\n\t\t\t\treturn function(row, cellData, eOpt){\r\n              \t\tif (eOpt.rowNum%2){\r\n                \t\teOpt.styleIndex = 1;\r\n              \t\t}  \r\n              \t\telse{\r\n                \t\teOpt.styleIndex = 2;\r\n              \t\t}\r\n                    if (cellData === null){\r\n                      eOpt.cellType = 'string';\r\n                      return 'N/A';\r\n                    } else\r\n                      return (cellData - originDate) / (24 * 60 * 60 * 1000);\r\n\t\t\t\t} \r\n\t\t\t}()\r\n\t\t},{\r\n\t\t\tcaption:'bool',\r\n\t\t\ttype:'bool'\r\n\t\t},{\r\n\t\t\tcaption:'number',\r\n\t\t\t type:'number'\t\t\t\t\r\n\t  \t}];\r\n\t  \tconf.rows = [\r\n\t \t\t['pi', new Date(Date.UTC(2013, 4, 1)), true, 3.14],\r\n\t \t\t[\"e\", new Date(2012, 4, 1), false, 2.7182],\r\n            [\"M&M<>'\", new Date(Date.UTC(2013, 6, 9)), false, 1.61803],\r\n            [\"null date\", null, true, 1.414]  \r\n\t  \t];\r\n\t  \tvar result = nodeExcel.execute(conf);\r\n\t  \tres.setHeader('Content-Type', 'application/vnd.openxmlformats');\r\n\t  \tres.setHeader(\"Content-Disposition\", \"attachment; filename=\" + \"Report.xlsx\");\r\n\t  \tres.end(result, 'binary');\r\n\t});\r\n\r\n\tapp.listen(3000);\r\n\tconsole.log('Listening on port 3000');\r\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/functionscope/Node-Excel-Export/issues"
  },
  "homepage": "https://github.com/functionscope/Node-Excel-Export",
  "_id": "excel-export@0.3.11",
  "dist": {
    "shasum": "421fb5d2f5b90e2bfab27e2759b71c29d8a53d6a"
  },
  "_from": "excel-export@~0.3.11",
  "_resolved": "https://registry.npmjs.org/excel-export/-/excel-export-0.3.11.tgz"
}
