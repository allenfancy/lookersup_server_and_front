
/**
 * Test.
 */

var fs = require('fs');
var http = require('http');
var assert = require('assert');
var express = require('express');
var request = require('request');

var CloudXLS = require('../');

var api_key = 'SOME-API-KEY';

describe("CloudXLS", function(){

  it("should be a function", function(){
    CloudXLS.should.be.a.Function;
  })

  it("should have `.version` property", function(){
    CloudXLS.version.should.match(/[0-9\.]+/);
  })

})

describe("new CloudXLS(api_key)", function(){

  it("should return an instance of `CloudXLS`", function(){
    var cloudxls = new CloudXLS(api_key);
    cloudxls.should.be.an.instanceof(CloudXLS);
  })

  it("should have `settings` property", function(){
    var cloudxls = new CloudXLS(api_key);
    cloudxls.settings.should.be.an.Object;
  })

  it("should have default `settings.api_url`", function(){
    var cloudxls = new CloudXLS(api_key);
    cloudxls.settings.api_url.should.equal('https://api.cloudxls.com/v1/convert');
  })

  it("should set `settings.api_key`", function(){
    var cloudxls = new CloudXLS(api_key);
    cloudxls.settings.api_key.should.equal(api_key);
  })

  it("should throw when not passed an `api_key`", function(){
    (function(){
      var cloudxls = new CloudXLS();
    }).should.throw(/API key/);
  })

})

describe("new CloudXLS(settings)", function(){

  it("should override default settings", function(){
    var settings = {
      api_url: 'https://some.api/url',
      api_key: 'some_key'
    };

    var cloudxls = new CloudXLS(settings);

    cloudxls.settings.api_url.should.equal(settings.api_url);
    cloudxls.settings.api_key.should.equal(settings.api_key);
  })

  it("should throw when not passed an `api_key`", function(){
    var settings = {
      api_url: 'https://some.api/url'
    };

    (function(){
      var cloudxls = new CloudXLS(settings);
    }).should.throw(/API key/);
  })

})

describe(".request()", function(){

  var app;
  var server;
  var cloudxls;

  beforeEach(function(done){
    app = express();
    server = http.createServer(app);
    server.listen(7070, 'localhost', done);
    cloudxls = new CloudXLS({
      api_url: 'http://localhost:7070/api',
      api_key: api_key
    });
  })

  afterEach(function(done){
    server.close(done);
  })

  it("should return an instance of `Request`", function(done){
    app.use(express.basicAuth(api_key, ''));
    app.post('/api', function(req, res){
      res.send();
      done();
    });
    var req = cloudxls.request({});
    req.should.be.an.instanceof(request.Request);
  })

  it("should throw when missing form data", function(){
    (function(){
      cloudxls.request();
    }).should.throw(/form/);
  })

  it("should send basic auth credentials", function(done){
    app.use(express.basicAuth(function(user, pass){
      user.should.equal(api_key);
      pass.should.equal('');
      done();
    }));

    cloudxls.request({});
  })

  it("should send `User-Agent` header", function(done){
    app.use(express.basicAuth(api_key, ''));
    app.post('/api', function(req, res){
      req.headers['user-agent'].should.match(/^cloudxls-node v[0-9\.]+$/);
      res.send();
      done();
    });

    cloudxls.request({});
  })

  it("should send form data", function(done){
    var data = {
      foo: 'bar'
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      req.body.should.eql(data);
      res.send();
      done();
    });

    cloudxls.request(data);
  })

  it("should parse JSON response", function(done){
    var data = {
      foo: 'bar'
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      res.send({ some: 'response' });
    });

    cloudxls.request(data, function(err, res, body){
      body.should.be.an.Object;
      body.should.have.property('some');
      body.some.should.equal('response');
      done();
    });
  })

  it("should implicitly set `mode=async` when passing a callback", function(done){
    var data = {
      foo: 'bar'
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      req.body.should.have.property('mode');
      req.body.mode.should.equal('async');
      res.send();
      done();
    });

    cloudxls.request(data, function(){});
  })

  it("should implicitly set `mode=inline` when omitting callback", function(done){
    var data = {
      foo: 'bar'
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      req.body.should.have.property('mode');
      req.body.mode.should.equal('inline');
      res.send();
      done();
    });

    cloudxls.request(data);
  })

  it("should upload files", function(done){
    var data = {
      foo: 'bar',
      doc: {
        template: fs.createReadStream(__dirname + '/assets/order_dashboard.xls')
      }
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      req.files.should.have.property('doc');
      req.files.doc.should.have.property('template');
      req.files.doc.template.size.should.equal(55296);
      req.files.doc.template.name.should.equal('order_dashboard.xls');
      req.files.doc.template.type.should.equal('application/vnd.ms-excel');
      res.send();
      done();
    });

    cloudxls.request(data);
  })

})

describe(".async()", function(){

  var app;
  var server;
  var cloudxls;

  beforeEach(function(done){
    app = express();
    server = http.createServer(app);
    server.listen(7070, 'localhost', done);
    cloudxls = new CloudXLS({
      api_url: 'http://localhost:7070/api',
      api_key: api_key
    });
  })

  afterEach(function(done){
    server.close(done);
  })

  it("should return an instance of `Request`", function(done){
    app.use(express.basicAuth(api_key, ''));
    app.post('/api', function(req, res){
      res.send();
      done();
    });
    var req = cloudxls.async({});
    req.should.be.an.instanceof(request.Request);
  })

  it("should throw when missing form data", function(){
    (function(){
      cloudxls.async();
    }).should.throw(/form/);
  })

  it("should send form data", function(done){
    var data = {
      foo: 'bar'
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      req.body.should.eql(data);
      res.send();
      done();
    });

    cloudxls.async(data);
  })

  it("should set `mode=async`", function(done){
    var data = {
      foo: 'bar'
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      req.body.should.have.property('mode');
      req.body.mode.should.equal('async');
      res.send();
      done();
    });

    cloudxls.async(data);
  })

  it("should parse JSON response", function(done){
    var data = {
      foo: 'bar'
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      res.send({ some: 'response' });
    });

    cloudxls.async(data, function(err, res, body){
      body.should.be.an.Object;
      body.should.have.property('some');
      body.some.should.equal('response');
      done();
    });
  })

})

describe(".inline()", function(){

  var app;
  var server;
  var cloudxls;

  beforeEach(function(done){
    app = express();
    server = http.createServer(app);
    server.listen(7070, 'localhost', done);
    cloudxls = new CloudXLS({
      api_url: 'http://localhost:7070/api',
      api_key: api_key
    });
  })

  afterEach(function(done){
    server.close(done);
  })

  it("should return an instance of `Request`", function(done){
    app.use(express.basicAuth(api_key, ''));
    app.post('/api', function(req, res){
      res.send();
      done();
    });
    var req = cloudxls.inline({});
    req.should.be.an.instanceof(request.Request);
  })

  it("should throw when missing form data", function(){
    (function(){
      cloudxls.inline();
    }).should.throw(/form/);
  })

  it("should send form data", function(done){
    var data = {
      foo: 'bar'
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      req.body.should.eql(data);
      res.send();
      done();
    });

    cloudxls.inline(data);
  })

  it("should set `mode=inline`", function(done){
    var data = {
      foo: 'bar'
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      req.body.should.have.property('mode');
      req.body.mode.should.equal('inline');
      res.send();
      done();
    });

    cloudxls.inline(data);
  })

  it("should stream response", function(done){
    var data = {
      foo: 'bar'
    };

    app.use(express.basicAuth(api_key, ''));
    app.use(express.bodyParser());
    app.post('/api', function(req, res){
      res.send('response data');
    });

    var req = cloudxls.inline(data);

    var body = '';

    req.on('data', function(chunk){
      body += chunk;
    });

    req.on('end', function(){
      body.should.equal('response data');
      done();
    });
  })

})
